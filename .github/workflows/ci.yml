name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  ci:
    name: CI
    if: github.event_name == 'pull_request'  # Ensure this job runs only on pull request events
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: oyster
          POSTGRES_PASSWORD: oyster
          POSTGRES_USER: oyster
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" --health-interval 10s --health-timeout
          5s --health-retries 5

    env:
      BASE_SHA: ${{ github.event.pull_request.base.sha }}
      DATABASE_URL: postgres://oyster:oyster@localhost:5432/oyster
      REDIS_URL: redis://localhost:6379
  
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Turborepo setup
        uses: actions/cache@v4
        with:
          # When running turbo commands, we use `.turbo` as the cache directory.
          # See the root `package.json` for reference.
          path: .turbo

          key: ${{ runner.os }}-turbo-${{ github.sha }}

          # This is how GitHub Actions restores the cache. Because we only
          # the prefix of the key (and not the `github.sha`), this will allow
          # us to hit the cache on any CI runs on commit on any branch.
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run database migrations and generate types
        run: yarn db:migrate

      - name: Lint
        run: yarn lint --filter=[$BASE_SHA]

      - name: Check types
        run: yarn type-check --filter=[$BASE_SHA]

      - name: Build all packages and applications
        run: yarn build --filter=[$BASE_SHA]

      - name: Run tests
        run: yarn test --filter=[$BASE_SHA]

  Sorting_Contributors: 
    name: Sorting Contributors 
    if: github.event_name == 'push'  # Ensure this job runs only on push events
    runs-on: ubuntu-latest
    steps:
      - name: Check if CONTRIBUTORS.yml is sorted
        id: check-sorted
        run: |
          if ! sort -c CONTRIBUTORS.yml; then
            echo "::set-output name=sorted::false"
          else
            echo "::set-output name=sorted::true"
          fi
        working-directory: ./CONTRIBUTORS.yml
      
      - name: Sort CONTRIBUTORS.yml if not sorted
        if: steps.check-sorted.outputs.sorted == 'false'
        run: sort -o CONTRIBUTORS.yml CONTRIBUTORS.yml
        working-directory: ./CONTRIBUTORS.yml

      - name: Commit sorted CONTRIBUTORS.yml
        if: steps.check-sorted.outputs.sorted == 'false'
        run: |
          git config --global user.email "davidsalazar200@gmail.com"
          git config --global user.name "DavidSalazar123"
          git add CONTRIBUTORS.yml/
          git commit -m "chore: sort CONTRIBUTORS.yml"
          git push origin HEAD:testing
        working-directory: ./CONTRIBUTORS.yml